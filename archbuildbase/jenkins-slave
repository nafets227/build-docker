#!/usr/bin/env bash

# The MIT License
#
#  Copyright (c) 2015, CloudBees, Inc.
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#  THE SOFTWARE.

# Modified and enhances by Stefan Schallenberg <infos (at) nafets.de>
# (C) 2017 Stefan Schallenberg

# Usage jenkins-slave.sh [options] -url http://jenkins [SECRET] [AGENT_NAME]
# Optional environment variables :
# * JENKINS_TUNNEL : HOST:PORT for a tunnel to route TCP traffic to jenkins host, when jenkins can't be directly accessed over network
# * JENKINS_URL : alternate jenkins URL
# * JENKINS_SECRET : agent secret, if not set as an argument
# * JENKINS_AGENT_NAME : agent name, if not set as an argument
# * JENKINS_USER : username, defaults to "jenkins"
# * JENKINS_HOME: home-directory to use, defaults to /home/${JENKINS_USER}
# * CURL_OPT: Curl options for downloading jenkins-slave.jar. Commonly used is "-k" to accept not-trusted https certificates 

if [ $# -eq 1 ]; then

	# if `docker run` only has one arguments, we assume user is running alternate command like `bash` to inspect the image
	exec "$@"

else

	# if -tunnel is not provided try env vars
	if [[ "$@" != *"-tunnel "* ]]; then
		if [ ! -z "$JENKINS_TUNNEL" ]; then
			TUNNEL="-tunnel $JENKINS_TUNNEL"
		fi
	fi

 	echo "DEBUG: Parms=\"$@\""

	if [ -n "$JENKINS_URL" ]; then
		URL="-url $JENKINS_URL"
		echo "Debug: Using URL from JENKINS_URL ($JENKINS_URL)" 
	elif [[ "$@" == *"--url"* ]] ; then
		# identify real Jenkins URL in order to download latest slave
		URL=${@#*"--url"}
		JENKINS_URL=${URL%%" "*}
		URL="-url $JENKINS_URL"
		echo "Debug: Using URL from parm --url ($JENKINS_URL)"
	else
		echo "Error: No Jenkins URL. Either specify --url or set \$JENKINS_URL."
		exit 1
	fi

	if [ -z "$JNLP_PROTOCOL_OPTS" ]; then
		echo "Warning: JnlpProtocol3 is disabled by default, use JNLP_PROTOCOL_OPTS to alter the behavior"
		JNLP_PROTOCOL_OPTS="-Dorg.jenkinsci.remoting.engine.JnlpProtocol3.disabled=true"
	fi

	JENKINS_USER=${JENKINS_USER:-jenkins}
	JENKINS_HOME=${JENKINS_HOME:-/home/$JENKINS_USER}

	if [ ! -d "$JENKINS_HOME/workspace" ] || [ ! -w "$JENKINS_HOME/workspace" ] ; then
		echo "Error: HOME-workspace $JENKINS_HOME/workspace is no directory or not writable."
		exit 1
	elif [ -f $JENKINS_HOME/workspace/slave.jar ] ; then
		echo "Updating $JENKINS_HOME/workspace/slave.jar from $JENKINS_URL/jnlpJars/slave.jar"
		curl $CURL_OPT -L -o $JENKINS_HOME/workspace/slave.jar -z $JENKINS_HOME/workspace/slave.jar $JENKINS_URL/jnlpJars/slave.jar
		if [ $? -ne 0 ] ; then
			echo "Updating $JENKINS_HOME/workspace/slave.jar failed."
			exit 1
		fi
	else
		echo "Downloading $JENKINS_HOME/workspace/slave.jar from $JENKINS_URL/jnlpJars/slave.jar"
		curl $CURL_OPT -L -o $JENKINS_HOME/workspace/slave.jar $JENKINS_URL/jnlpJars/slave.jar
		if [ $? -ne 0 ] ; then
			echo "Downloading $JENKINS_HOME/workspace/slave.jar failed."
			exit 1
		fi
	fi

	echo "Assuring correct access rights in $JENKINS_HOME/workspace"
	chown jenkins:jenkins $JENKINS_HOME $JENKINS_HOME/.owner 
#	chown -R jenkins:jenkins $HOME/workspace
	find $JENKINS_HOME/workspace -! -user jenkins -exec chown jenkins {} ";"
	find $JENKINS_HOME/workspace -! -group jenkins -exec chown :jenkins {} ";"

	echo "Starting Jenkins slave as User $JENKINS_USER at $JENKINS_HOME"

	exec sudo -u $JENKINS_USER -- java $JAVA_OPTS $JNLP_PROTOCOL_OPTS \
		-cp $JENKINS_HOME/workspace/slave.jar \
		hudson.remoting.jnlp.Main -headless $TUNNEL $URL "$@"

fi
